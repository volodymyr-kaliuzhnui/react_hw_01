{"version":3,"sources":["components/FriendList/FriendListItem/FriendListItem.module.css","components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransacrionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","followers","views","likes","defaultProps","Statistics","title","background","map","id","label","percentage","FriendListItem","isOnline","online","offline","toString","width","FriendList","friends","TransactionHistory","items","type","amount","currency","typeUpperCase","toUpperCase","slice","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68fc11bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"FriendListItem_list-item__1vKkN\",\"online\":\"FriendListItem_online__3qUyl\",\"offline\":\"FriendListItem_offline__2ZO_d\",\"avatar\":\"FriendListItem_avatar__1hcJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2sFWh\",\"description\":\"Profile_description__1ZzJT\",\"avatar\":\"Profile_avatar__3nhwz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"with-title\":\"Statistics_with-title__vbWZU\",\"without-title\":\"Statistics_without-title__1KBAG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"FriendList_friend-list__21uQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransacrionHistory_transaction-history__1sJXV\"};","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css'\r\n\r\nfunction Profile ({name, tag, location, avatar, stats}) {\r\n    return (\r\n        <div className={styles.profile}>\r\n            <div className={styles.description}>\r\n                <img\r\n                    src={avatar}\r\n                    alt=\"Аватар пользователя\"\r\n                    className={styles.avatar}\r\n                />\r\n                <p className=\"name\">{name}</p>\r\n                <p className=\"tag\">@{tag}</p>\r\n                <p className=\"location\">{location}</p>\r\n            </div>\r\n            <ul className=\"stats\">\r\n                <li>\r\n                    <span className=\"label\">Followers</span>{': '}\r\n                    <span className=\"quantity\">{stats.followers}</span>\r\n                </li>\r\n                <li>\r\n                    <span className=\"label\">Views</span>{': '}\r\n                    <span className=\"quantity\">{stats.views}</span>\r\n                </li>\r\n                <li>\r\n                    <span className=\"label\">Likes</span>{': '}\r\n                    <span className=\"quantity\">{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.defaultProps = {\r\n    name: 'User Name',\r\n    tag: 'User tag',\r\n    location: 'User location',\r\n    avatar: 'https://mantenimientocode.xyz/images/not-found.jpg',\r\n    stats: {\r\n        followers: 0,\r\n        views: 0,\r\n        likes: 0\r\n    }\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.objectOf(PropTypes.number.isRequired)\r\n}\r\n\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css'\r\n\r\nfunction Statistics({title,  stats}) {\r\n    let background = title ? styles['with-title'] : styles['without-title']\r\n    return (\r\n        <section className={background}>\r\n            {title && <h2 className=\"title\">{title}</h2>}\r\n            <ul className=\"stat-list\">\r\n                {stats.map(({id, label, percentage}) => {\r\n                    return (\r\n                        <li className=\"item\" key={id}>\r\n                            <span className=\"label\">{label}</span>{' '}\r\n                            <span className=\"percentage\">{percentage}%</span>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nStatistics.defaultProps = {\r\n    stats: [\r\n        {\r\n            id: 'id-?',\r\n            label: 'Not found',\r\n            percentage: 0\r\n        }\r\n    ]\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.exact(\r\n            {\r\n                id: PropTypes.string.isRequired,\r\n                label: PropTypes.string.isRequired,\r\n                percentage: PropTypes.number.isRequired\r\n            }\r\n        )\r\n    ).isRequired\r\n}\r\n\r\nexport default Statistics;","import React from 'react'\r\nimport styles from './FriendListItem.module.css'\r\n\r\nfunction FriendListItem({avatar, name, isOnline}) {\r\n    return (\r\n        <li className={styles['list-item']}>\r\n            <span className={isOnline ? styles.online : styles.offline}>{isOnline.toString()}</span>\r\n            <img className={styles.avatar} src={avatar} alt={name} width=\"48\"/>\r\n            <p className=\"name\">{name}</p>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default FriendListItem","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem'\r\nimport styles from './FriendList.module.css'\r\n\r\nfunction FriendList({friends}) {\r\n    return (\r\n        <ul className={styles['friend-list']}>\r\n            {friends.map(({avatar, name, isOnline, id}) => {\r\n                return (\r\n                    <FriendListItem key={id.toString()} avatar={avatar} name={name} isOnline={isOnline} />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nFriendList.defaultProps = {\r\n    friends: [\r\n        {\r\n            avatar: 'https://mantenimientocode.xyz/images/not-found.jpg',\r\n            name: 'Not found',\r\n            isOnline: false,\r\n            id: 0\r\n        }\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.exact(\r\n            {\r\n                avatar: PropTypes.string.isRequired,\r\n                name: PropTypes.string.isRequired,\r\n                isOnline: PropTypes.bool.isRequired,\r\n                id: PropTypes.number.isRequired\r\n            }\r\n        )\r\n    ).isRequired\r\n}\r\n\r\n\r\nexport default FriendList","import React from 'react';\r\nimport styles from './TransacrionHistory.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TransactionHistory({items}) {\r\n    return (\r\n        <table className={styles['transaction-history']}>\r\n            <thead>\r\n            <tr>\r\n                <th>Type</th>\r\n                <th>Amount</th>\r\n                <th>Currency</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {items.map(({id, type, amount, currency }) => {\r\n                let typeUpperCase = type[0].toUpperCase() + type.slice(1);\r\n                return (\r\n                    <tr key={id}>\r\n                        <td>{typeUpperCase}</td>\r\n                        <td>{amount}</td>\r\n                        <td>{currency}</td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nTransactionHistory.defaultProps = {\r\n    items: [\r\n        {\r\n            id: '0',\r\n            type: 'Not found',\r\n            amount: '0',\r\n            currency: 'Not found'\r\n        }\r\n    ]\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.exact(\r\n            {\r\n                id: PropTypes.string.isRequired,\r\n                type: PropTypes.string.isRequired,\r\n                amount: PropTypes.string.isRequired,\r\n                currency: PropTypes.string.isRequired\r\n            }\r\n        ).isRequired\r\n    ).isRequired\r\n}\r\n\r\n\r\nexport default TransactionHistory","import React from \"react\";\r\n// _________________________________________\r\nimport user from './components/Profile/user.json';\r\nimport Profile from \"./components/Profile\";\r\n// __________________________________________________\r\nimport Statistics from './components/Statistics';\r\nimport statisticalData from './components/Statistics/statistical-data.json';\r\n// _______________________________________________________\r\nimport FriendList from \"./components/FriendList\";\r\nimport friends from './components/FriendList/friends.json';\r\n// ____________________________________________________\r\nimport TransactionHistory from './components/TransactionHistory';\r\nimport transactions from './components/TransactionHistory/transactions.json'\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Profile\r\n                name={user.name}\r\n                tag={user.tag}\r\n                location={user.location}\r\n                avatar={user.avatar}\r\n                stats={user.stats}\r\n            />\r\n            <Statistics title='Statistic' stats={statisticalData} />\r\n            <Statistics  stats={statisticalData} />\r\n            <FriendList friends={friends}/>\r\n            <TransactionHistory items = {transactions}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}